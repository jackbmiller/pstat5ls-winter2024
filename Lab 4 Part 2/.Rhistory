knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
plot_norm(mean = 0.67, sd = 0.021, shadeValues = c(0.64, 0.7), direction = "beyond", col.shade = green)
plot_norm(mean = 0.67, sd = 0.021, shadeValues = c(0.64, 0.7), direction = "beyond", col.shade = "green")
plot_norm(mean = 0.67, sd = 0.021, shadeValues = c(0.64, 0.7), direction = "beyond", col.shade = "lightgreen")
plot_norm(mean = 0.67, sd = 0.021, shadeValues = c(0.64, 0.7), direction = "beyond", col.shade = "darkgreen")
plot_norm(mean = 0.67, sd = 0.021, shadeValues = c(0.64, 0.7), direction = "beyond", col.shade = "darkgreen")
pnorm(q = 0.7, mean = 0.67, sd = 0.021, lower.tail = FALSE) * 2
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
set.seed(1944)
sim1 <- simulate_chance_model(chanceSuccess = 0.67,
numDraws = 480,
numRepetitions = 1000)
set.seed(734)
sim1 <- simulate_chance_model(chanceSuccess = 0.67,
numDraws = 480,
numRepetitions = 500)
hist(sim1,
main = "Histogram of 500 Simulation Results",
xlab = "Simulated proportion of U.S households with
at least one pet in the pandemic")
abline(v = 0.7, col = "red")
abline(v = 0.64, col = "red")
set.seed(734)
sim1 <- simulate_chance_model(chanceSuccess = 0.67,
numDraws = 480,
numRepetitions = 1000)
set.seed(734)
sim1 <- simulate_chance_model(chanceSuccess = 0.67,
numDraws = 480,
numRepetitions = 500)
hist(sim1,
main = "Histogram of 500 Simulation Results",
xlab = "Simulated proportion of U.S households with
at least one pet in the pandemic")
abline(v = 0.7, col = "red")
abline(v = 0.64, col = "red")
336/480
hist(sim1,
main = "Histogram of 500 Simulation Results",
xlab = "Simulated proportion of U.S households with at least one pet")
abline(v = 0.7, col = "red")
abline(v = 0.64, col = "red")
sum(sim1 >= 0.70 | sim1 <= 0.64) / 500
plot_norm(mean = 0.67,
sd = 0.021,
shadeValues = c(0.64, 0.7),
direction = "beyond",
col.shade = "darkorange")
plot_norm(mean = 0.67,
sd = 0.021,
shadeValues = c(0.64, 0.7),
direction = "beyond",
col.shade = "darkgreen")
?prop_test
2 * pnorm(q = 0.7,
mean = 0.67,
sd = 0.021,
lower.tail = FALSE)
set.seed(734)
prop_test(x = 336,
n = 480,
p = 0.67,
alternative = "two.sided")
plot_norm(mean = 0, sd = 1)
sum(sim1 <= 0.64) / 500 + sum(sim1 >= 0.7) / 500
prop_test(x = 336, n = 480, p = 0.67)
pnorm(q = 0.7, mean = 0.67, sd = 0.021, lower.tail = FALSE) * 2
plot_norm(mean = 0.67, sd = 0.021, shadeValues = c(0.635, 0.705), direction = "beyond", col.shade = "pink")
qnorm(p = 0.099 / 2, mean = 0.67, sd = 0.021)
qnorm(p = 0.099 / 2, mean = 0.67, sd = 0.021,
lower.tail = FALSE)
install.packages("stats250sbi")
install.packages(c("remotes", "checkmate"))
remotes::install_github("STATS250SBI/stats250sbi", dependencies = TRUE)
library(stats250sbi)
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
# Run this code chunk to compute the standard error for the normal distribution
p_0 <- 0.67
n <- 480
SE <- sqrt(p_0*(1 - p_0)/n)
SE
prop_test(92, 200, p = 0.43)
prop_test(56, 200, p = 0.43)
prop_test(64, 200, p = 0.43)
prop_test(70, 200, p = 0.43)
prop_test(75, 200, p = 0.43)
prop_test(72, 200, p = 0.43)
prop_test(73, 200, p = 0.43)
prop_test(74, 200, p = 0.43)
prop_test(74, 200, p = 0.43, conf.level = 0.90)
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
# Use this code chunk to run the hypothesis test.
prop_test(x = 74, n = 200, p = 0.43, alternative = "two.sided")
# Use this code chunk to calculate the 90% confidence interval.
prop_test(x = 74, n = 200, p = 0.43, alternative = "two.sided", conf.level = 0.90)
