install.packages(c("remotes", "checkmate"))
remotes::install_github("STATS250SBI/stats250sbi", dependencies = TRUE)
library(stats250sbi)
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
hist(penguins$flipper_length_mm,
main = "Histogram of Flipper Length",
xlab = "Flipper length (mm)",
col = "#09847A")
penguins <- read.csv("penguins.csv", stringsAsFactors = TRUE)
hist(penguins$flipper_length_mm,
main = "Histogram of Flipper Length",
xlab = "Flipper length (mm)",
col = "#09847A")
t.test(penguins$flipper_length_mm,
conf.level = 0.9)
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
# Note that you didn't need to use the `alternative` argument to find a confidence interval. If you would like to include that argument, be sure to use "two.sided"
# Run this code chunck to
t.test(penguins$flipper_length_mm,
alternative = "two.sided",
conf.level = 0.9)
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
# Run this code chunk to load the body temperature data set
body_temp <- read.csv("body_temp.csv", stringsAsFactors = TRUE)
# Run this code chunk to load the body temperature data set
body_temp <- read.csv("body_temp.csv", stringsAsFactors = TRUE)
temp_F <- body_temp$temp
# Run this code chunk to produce a histogram of the body temperature data
hist(body_temp$temp,
main = "Histogram of Sampled Body Temperatures",
xlab = "Temperature in Degrees Fahrenheit")
knitr::opts_chunk$set(echo = TRUE)
library(stats250sbi)
t.test(body_temp$temp,
conf.level = 0.98)
summary(body_temp$temp)
# Use this code chunk to write the code necessary to create the 98% confidence interval.
t.test(body_temp$temp,
conf.level = 0.98)
